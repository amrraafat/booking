@model List<ReservationViewModel>
@{
    ViewData["title"] = "Reservations";
    var currentCulture = ViewBag.currentCulture;
    var reservationpag = ViewBag.Reservationpag as Reservation;
}
<style>
    .table-responsive {
        overflow-x: auto;
    }

    #tableRole td,
    #tableRole th {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
<div class="wrapper">
    <!--Content-Header-->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">@ViewData["title"]</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/Home/Index">@Localizer["lbHomePage"]</a></li>
                        <li class="breadcrumb-item active">@Localizer["lbMangeReservation"]</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <section class="content">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <h3 class="card-title" style="margin-left:20px">@Localizer["lbCurrentReservation"]</h3>
                        <div class="row">
                            <div class="col-md-12">
                                <a href="@Url.Action("Create", "Reservations")" class="btn btn-success">@Localizer["lbbtAddNewReservation"]</a>
                            </div>
                        </div>
                        <div class="card-tools">
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="tableRole" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Customer Name</th>
                                        <th>Hotel Name</th>
                                        <th>Package Name</th>
                                        <th>Reservation Date</th>
                                        <th>Adults Count</th>
                                        <th>Kids Count</th>
                                        <th>Total Price</th>
                                        <th>Discount Amount</th>
                                        <th>Price After Discount</th>
                                        <th>Paid</th>
                                        <th>Remain</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                        @foreach (var reservation in Model)
                                        {
                                            <tr>
                                                <td>@reservation.customer.CustomerName</td>
                                                <td>
                                                    @if (currentCulture == "ar")
                                                    {
                                                        @reservation.hotel.HotelNameFL
                                                    }
                                                    else
                                                    {
                                                        @reservation.hotel.HotelNameSL
                                                    }
                                                </td>
                                                <td>@reservation.package.PackageName</td>
                                                <td>@reservation.reservation.ReservationDateTime</td>
                                                <td>@reservation.reservation.AdultNo</td>
                                                <td>@reservation.reservation.KidNo</td>
                                                <td>@Math.Floor(reservation.reservation.TotalPrice)</td>
                                                <td>@Math.Floor(reservation.reservation.Discount)</td>
                                                <td>@Math.Floor((reservation.reservation.TotalPrice - reservation.reservation.Discount))</td>
                                                <td>@Math.Floor(reservation.reservation.Paid)</td>
                                                <td>@Math.Floor(reservation.reservation.Remain)</td>
                                                <td>
                                                    <div class="row">
                                                        <div class="col-3">
                                                            <a href="@Url.Action("Edit", "Reservations", new { id = reservation.reservation.ReservationId })" class="btn btn-warning btn-sm">@Localizer["lbbtnEdit"]</a>
                                                        </div>
                                                    <div class="col-3">
                                                        <form id="deleteForm-@reservation.reservation.ReservationId" asp-action="DeleteReservation" asp-controller="Reservations" method="post">
                                                            <input type="hidden" name="id" value="@reservation.reservation.ReservationId" />
                                                            <!-- Hidden input field to store the reason for deletion -->
                                                            <input type="hidden" id="deleteReasonInput" name="reason" />
                                                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('@reservation.reservation.ReservationId')" id="confirmButton">@Localizer["lbbtnDelete"]</button>
                                                        </form>
                                                    </div>

                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>




@section Script
{
    @if (!string.IsNullOrEmpty(Context.Session.GetString("msgType")))
    {
        if (Context.Session.GetString("msgType") == "success")
        {
            <script>
                Swal.fire({
                    icon: "success",
                    title: ' @Context.Session.GetString("titel")',
                    text: '@Html.Raw(Context.Session.GetString("msg"))',
                    showConfirmButton: 'حسناً',
                });
            </script>
        }
        else
        {
            <script>
                Swal.fire({
                    icon: "error",
                    title: '@Context.Session.GetString("titel")',
                    text: '@Html.Raw(Context.Session.GetString("msg"))',
                    showConfirmButton: 'حسناً',


                });

            </script>
        }
        Context.Session.SetString("msgType", "");
    }

    <script>
        function confirmDelete(customerId) {
            Swal.fire({
                title: '@Localizer["lbAreyousure"]',
                text: "@Localizer["lbCanback"]",
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: '@Localizer["lbcancelButtonText"]',
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: '@Localizer["lbYesdelete"]',
                input: 'text',
                inputPlaceholder: 'Enter reason for deletion',
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to enter a reason!';
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Get the reason entered by the user
                    var reason = result.value;
                    // Set the value of the hidden input field
                    document.getElementById('deleteReasonInput').value = reason;
                    // Submit the form
                    document.getElementById('deleteForm-' + customerId).submit();
                }
            });
        }
    </script>

    </script>

    <script src="~/js/Reservation.js"></script>

}
